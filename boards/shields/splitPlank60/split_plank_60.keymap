#include "miryoku/custom_config.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10


#if defined (MIRYOKU_KLUDGE_MOUSEKEYSPR)
  #include <behaviors/mouse_move.dtsi>
  #include <behaviors/mouse_scroll.dtsi>
#else
  #include <dt-bindings/zmk/pointing.h>
#endif

#include "miryoku/miryoku.h"


#define U_BASE   0
#define U_GAME   1
#define U_TAP    2
#define U_BUTTON 3
#define U_NAV    4
#define U_MOUSE  5
#define U_MEDIA  6
#define U_NUM    7
#define U_SYM    8
#define U_FUN    9

// Behavior Overrides
&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <

            &kp Q,             &kp W,             &kp E,              &kp R,              &kp T,             U_NP,                    U_NP,                     &kp Y,             &kp U,             &kp I,             &kp O,             &kp P,             \
            U_MT(LGUI, A),     U_MT(LALT, S),     U_MT(LCTRL, D),     U_MT(LSHFT, F),     &kp G,             U_NP,                    U_NP,                     &kp H,             U_MT(RSHFT, J),    U_MT(LCTRL, K),    U_MT(LALT, L),     U_MT(LGUI, SQT),   \
            U_LT(U_BUTTON, Z), U_MT(RALT, X),     &kp C,              &kp V,              &kp B,             U_NP,                    U_NP,                     &kp N,             &kp M,             &kp COMMA,         U_MT(RALT, DOT),   U_LT(U_BUTTON, SLASH),\
            &kp Z,              &kp Z,            &kp Z,              &kp Z,              &kp Z,             &kp Z,                   &kp Z,                    &kp Z,             &kp Z,             &kp Z,             &kp Z,             &kp Z,              \
            U_NP,              U_NP,              U_NP,               U_LT(U_MEDIA, ESC), U_LT(U_NAV, SPACE),U_LT(U_MOUSE, TAB)       U_LT(U_SYM, RET),         U_LT(U_NUM, BSPC), U_LT(U_FUN, DEL),  U_NP,              U_NP,              U_NP            
            
            >;
        };

        GAME {
            display-name = "Game";
            bindings = <
            
            &kp Q,             &kp W,             &kp E,             &kp R,             &kp T,      U_NP,                     U_NP,        &kp Y,             &kp U,             &kp I,             &kp O,             &kp P,             \
            &kp A,             &kp S,             &kp D,             &kp F,             &kp G,      U_NP,                     U_NP,        &kp H,             &kp J,             &kp K,             &kp L,             &kp SQT,           \
            &kp Z,             &kp X,             &kp C,             &kp V,             &kp B,      U_NP,                     U_NP,        &kp N,             &kp M,             &kp COMMA,         &kp DOT,           &kp SLASH,         \
            &kp Z,             &kp Z,             &kp Z,             &kp Z,             &kp Z,      &kp Z,                    &kp Z,       &kp Z,             U_NP,              U_NP,              U_NP,              U_NP,              \
            U_NP,              U_NP,              U_NP,              &kp ESC,           &kp SPACE,  &kp TAB,                  &kp RET,     &kp BSPC,          &kp DEL,           U_NP,              U_NP,              U_NP

            >;
        };
            
        TAP {
            display-name = "Tap";
            bindings = <
            
            &kp Q,             &kp W,             &kp E,             &kp R,             &kp T,      U_NP,                     U_NP,        &kp Y,             &kp U,             &kp I,             &kp O,             &kp P,             \
            &kp A,             &kp S,             &kp D,             &kp F,             &kp G,      U_NP,                     U_NP,        &kp H,             &kp J,             &kp K,             &kp L,             &kp SQT,           \
            &kp Z,             &kp X,             &kp C,             &kp V,             &kp B,      U_NP,                     U_NP,        &kp N,             &kp M,             &kp COMMA,         &kp DOT,           &kp SLASH,         \
            U_NU,              U_NU,              U_NP,              U_NP,              U_NP,       U_NP,                     U_NP,        U_NP,              U_NP,              U_NP,              U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              &kp ESC,           &kp SPACE,  &kp TAB,                  &kp RET,     &kp BSPC,          &kp DEL,           U_NP,              U_NP,              U_NP

            >;
        };

        BUTTON {
            display-name = "Button";
            bindings = <
            
            U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,           U_NP,                     U_NP,   U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
            &kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NU,            U_NP,                     U_NP,   U_NU,              &kp RSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
            U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,           U_NP,                     U_NP,   U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
            U_NU,              U_NU,              U_NP,              U_NP,              U_NP,            U_NP,                     U_NP,   U_NP,            U_NP,            U_NP,            U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              U_BTN3,            U_BTN1,          U_BTN2,                   U_BTN2,   U_BTN1,            U_BTN3,            U_NP,              U_NP,              U_NP

            >;
        };


        NAV {
            display-name = "Nav";
            bindings = <
            
            U_BOOT,            &u_to_U_TAP,       &u_to_U_EXTRA,     &u_to_U_BASE,      U_NA,       U_NP,                     U_NP,        U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
            &kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,       U_NP,                     U_NP,        &u_caps_word,      &kp LEFT,          &kp DOWN,          &kp UP,            &kp RIGHT,         \
            U_NA,              &kp RALT,          &u_to_U_NUM,       &u_to_U_NAV,       U_NA,       U_NP,                     U_NP,        &kp INS,           &kp HOME,          &kp PG_DN,         &kp PG_UP,         &kp END,           \
            U_NU,              U_NU,              U_NA,              U_NA,              U_NA,       U_NP,                     U_NP,        U_NP,       U_NP,              U_NP,           U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              U_NP,              U_NP,       U_NP,                     &kp RET,           &kp BSPC,          &kp DEL,              U_NP,              U_NP,              U_NP

            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings =<
            
            U_BOOT,            &u_to_U_TAP,       &u_to_U_EXTRA,     &u_to_U_BASE,      U_NA,       U_NP,                     U_NP,        U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
            &kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,       U_NP,                     U_NP,        U_NU,              U_MS_L,            U_MS_D,            U_MS_U,            U_MS_R,            \
            U_NA,              &kp RALT,          &u_to_U_SYM,       &u_to_U_MOUSE,     U_NA,       U_NP,                     U_NP,        U_NU,              U_WH_L,            U_WH_D,            U_WH_U,            U_WH_R,            \
            U_NU,              U_NU,              U_NA,              U_NA,              U_NA,       U_NP,                     U_NP,        U_NP,       U_NP,              U_NP,            U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              U_NP,              U_NP,       U_NP,                    U_BTN2,            U_BTN1,            U_BTN3,              U_NP,              U_NP,              U_NP

            >;
        };
        
        MEDIA {
            display-name = "Media";
            bindings =<
            
            U_BOOT,            &u_to_U_TAP,       &u_to_U_EXTRA,     &u_to_U_BASE,      U_NA,        U_NP,                     U_NP,       U_RGB_TOG,         U_RGB_EFF,         U_RGB_HUI,         U_RGB_SAI,         U_RGB_BRI,         \
            &kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,        U_NP,                     U_NP,       U_EP_TOG,          &kp C_PREV,        &kp C_VOL_DN,      &kp C_VOL_UP,      &kp C_NEXT,        \
            U_NA,              &kp RALT,          &u_to_U_FUN,       &u_to_U_MEDIA,     U_NA,        U_NP,                     U_NP,       &u_out_tog,        &u_bt_sel_0,       &u_bt_sel_1,       &u_bt_sel_2,       &u_bt_sel_3,       \
            U_NU,              U_NU,              U_NA,              U_NA,              U_NA,        U_NP,                     U_NP,       U_NP,       U_NP,              U_NP,        U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              U_NP,              U_NP,        U_NP,                     &kp C_STOP,        &kp C_PP,          &kp C_MUTE,              U_NP,              U_NP,              U_NP

            >;
        };
        
        NUM {
            display-name = "Num";
            bindings =<
            
            &kp LBKT,          &kp N7,            &kp N8,            &kp N9,            &kp RBKT,    U_NP,                     U_NP,       U_NA,              &u_to_U_BASE,      &u_to_U_EXTRA,     &u_to_U_TAP,       U_BOOT,            \
            &kp SEMI,          &kp N4,            &kp N5,            &kp N6,            &kp EQUAL,   U_NP,                     U_NP,       U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
            &kp GRAVE,         &kp N1,            &kp N2,            &kp N3,            &kp BSLH,    U_NP,                     U_NP,       U_NA,              &u_to_U_NUM,       &u_to_U_NAV,       &kp RALT,          U_NA,              \
            U_NU,              U_NU,              U_NP,              U_NP,              U_NP,        U_NP,                     U_NP,       U_NA,              U_NA,              U_NA,              U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              &kp DOT,           &kp N0,      &kp MINUS,                U_NP,       U_NP,              U_NP,              U_NP,              U_NP,              U_NP

            >;
        };
        
        SYM {
            display-name = "Sym";
            bindings =<
            
            &kp LBRC,          &kp AMPS,          &kp ASTRK,         &kp LPAR,          &kp RBRC,     U_NP,                     U_NP,      U_NA,              &u_to_U_BASE,      &u_to_U_EXTRA,     &u_to_U_TAP,       U_BOOT,            \
            &kp COLON,         &kp DLLR,          &kp PRCNT,         &kp CARET,         &kp PLUS,     U_NP,                     U_NP,      U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
            &kp TILDE,         &kp EXCL,          &kp AT,            &kp HASH,          &kp PIPE,     U_NP,                     U_NP,      U_NA,              &u_to_U_SYM,       &u_to_U_MOUSE,     &kp RALT,          U_NA,              \
            U_NU,              U_NU,              U_NP,              U_NP,              U_NP,         U_NP,                     U_NP,      U_NA,              U_NA,              U_NA,              U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              &kp LPAR,          &kp RPAR,     &kp UNDER,                U_NP,      U_NP,              U_NP,              U_NP,              U_NP,              U_NP

            >;
        };
        

        FUN {
            display-name = "Fun";
            bindings =<
            
            &kp F12,           &kp F7,            &kp F8,            &kp F9,            &kp PSCRN,       U_NP,                     U_NP,   U_NA,              &u_to_U_BASE,      &u_to_U_EXTRA,     &u_to_U_TAP,       U_BOOT,            \
            &kp F11,           &kp F4,            &kp F5,            &kp F6,            &kp SLCK,        U_NP,                     U_NP,   U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
            &kp F10,           &kp F1,            &kp F2,            &kp F3,            &kp PAUSE_BREAK, U_NP,                     U_NP,   U_NA,              &u_to_U_FUN,       &u_to_U_MEDIA,     &kp RALT,          U_NA,              \
            U_NU,              U_NU,              U_NP,              U_NP,              U_NP,            U_NP,                     U_NP,   U_NA,              U_NA,              U_NA,              U_NU,              U_NU,              \
            U_NP,              U_NP,              U_NP,              &kp K_APP,         &kp SPACE,       &kp TAB,                  U_NP,   U_NP,              U_NP,              U_NP,              U_NP,              U_NP

            >;
        };
    };
};

#include "miryoku/miryoku_shift_functions.dtsi"

#include "miryoku/miryoku_double_tap_guard.dtsi"

#if defined (MIRYOKU_KLUDGE_MOUSEKEYSPR)
  #include "miryoku/miryoku_kludge_mousekeyspr.dtsi"
#else
  #include "miryoku/miryoku_mousekeys.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_THUMBCOMBOS)
  #include "miryoku/miryoku_kludge_thumbcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_TOPROWCOMBOS)
  #include "miryoku/miryoku_kludge_toprowcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_BOTTOMROWCOMBOS)
  #include "miryoku/miryoku_kludge_bottomrowcombos.dtsi"
#endif

#if defined (MIRYOKU_KLUDGE_TAPDELAY)
  #include "miryoku/miryoku_kludge_tapdelay.dtsi"
#else
  #include "miryoku/miryoku_behaviors.dtsi"
#endif

